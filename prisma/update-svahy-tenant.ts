import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function updateSvahyTenant() {
  console.log('üîß Aktualizace tenanta Svahy...');

  try {
    // 1. Zkontroluj, zda existuje veterin√°rn√≠ template
    let veterinaryTemplate = await prisma.contentTemplate.findUnique({
      where: { name: 'veterinary' }
    });

    // 2. Pokud neexistuje, vytvo≈ô ho
    if (!veterinaryTemplate) {
      console.log('üìù Vytv√°≈ôen√≠ veterin√°rn√≠ho content template...');
      
      veterinaryTemplate = await prisma.contentTemplate.create({
        data: {
          name: 'veterinary',
          displayName: 'Veterin√°rn√≠ ordinace',
          category: 'healthcare',
          labels: {
            // Z√°kladn√≠ texty
            app_name: 'Veterin√°rn√≠ ordinace',
            hero_title: 'Rezervujte si term√≠n online',
            hero_subtitle: 'Jednoduch√© a rychl√© rezervace veterin√°rn√≠ch slu≈æeb p≈ô√≠mo z pohodl√≠ domova',
            
            // Role
            STAFF: 'Veterin√°≈ô',
            STAFF_PLURAL: 'Veterin√°≈ôi',
            CLIENT: 'Majitel zv√≠≈ôete',
            ADMIN: 'Spr√°vce',
            
            // Entity
            SLOT: 'Term√≠n',
            RESERVATION: 'Rezervace',
            SERVICE_SUBJECT: 'Zv√≠≈ôe',
            
            // Formul√°≈ôov√© pole
            pet_name: 'Jm√©no zv√≠≈ôete',
            pet_type: 'Druh zv√≠≈ôete',
            client_name: 'Va≈°e jm√©no',
            client_phone: 'Telefonn√≠ ƒç√≠slo',
            
            // Akce
            book_appointment: 'üêæ Rezervovat term√≠n',
            cancel_appointment: 'Zru≈°it rezervaci',
            view_appointments: 'Moje rezervace',
            
            // Typy slu≈æeb
            service_types: {
              basic_exam: 'Z√°kladn√≠ vy≈°et≈ôen√≠',
              vaccination: 'Oƒçkov√°n√≠',
              surgery: 'Chirurgick√Ω z√°krok',
              dental: 'Zubn√≠ o≈°et≈ôen√≠',
              emergency: 'Akutn√≠ o≈°et≈ôen√≠'
            },
            
            // Specifick√© texty
            opening_hours: 'Ordinaƒçn√≠ hodiny',
            emergency_contact: 'Pohotovost',
            pet_health_info: 'Zdravotn√≠ informace',
            
            // Team portal str√°nka
            team_portal: {
              title: 'T√Ωmov√Ω port√°l',
              subtitle: 'P≈ôihl√°≈°en√≠ pro {{STAFF_PLURAL}} a administr√°tory',
              info_title: 'Pouze pro zamƒõstnance',
              info_description: 'Pou≈æijte sv√© pracovn√≠ p≈ôihla≈°ovac√≠ √∫daje do syst√©mu ordinace.',
              username_label: 'U≈æivatelsk√© jm√©no',
              username_placeholder: 'jmeno.prijmeni',
              password_label: 'Heslo',
              password_placeholder: 'Va≈°e pracovn√≠ heslo',
              sign_in_button: 'P≈ôihl√°sit se do port√°lu',
              signing_in: 'P≈ôihla≈°ov√°n√≠...',
              error_invalid_credentials: 'Neplatn√© p≈ôihla≈°ovac√≠ √∫daje',
              error_login: 'Chyba p≈ôi p≈ôihla≈°ov√°n√≠',
              support_text: 'M√°te pot√≠≈æe s p≈ôihl√°≈°en√≠m? Kontaktujte IT podporu.',
              client_question: 'Jste klient?',
              client_link: 'P≈ôihlaste se zde ‚Üí',
              loading: 'Naƒç√≠t√°m...'
            }
          },
          messages: {
            // Zpr√°vy a notifikace
            reservation_confirmed: 'Va≈°e rezervace byla potvrzena',
            reservation_cancelled: 'Rezervace byla zru≈°ena',
            reminder: 'P≈ôipom√≠nka n√°v≈°tƒõvy z√≠tra v {{time}}',
            thank_you: 'Dƒõkujeme za n√°v≈°tƒõvu!',
            new_reservation: 'Nov√° rezervace vy≈æaduje pozornost'
          },
          emailTemplates: {
            reservation_created: {
              subject: 'Potvrzen√≠ rezervace - {{date}}',
              body: `
                <h2>Va≈°e rezervace byla p≈ôijata</h2>
                <p>Dobr√Ω den {{client_name}},</p>
                <p>potvrzujeme Va≈°i rezervaci na term√≠n:</p>
                <ul>
                  <li><strong>Datum a ƒças:</strong> {{date}} v {{time}}</li>
                  <li><strong>Veterin√°≈ô:</strong> {{doctor_name}}</li>
                  <li><strong>Zv√≠≈ôe:</strong> {{pet_name}}</li>
                  <li><strong>Typ vy≈°et≈ôen√≠:</strong> {{service_type}}</li>
                </ul>
                <p>V p≈ô√≠padƒõ pot≈ôeby zmƒõny term√≠nu n√°s pros√≠m kontaktujte.</p>
                <p>S pozdravem,<br>T√Ωm veterin√°rn√≠ ordinace</p>
              `
            }
          },
          colorScheme: {
            primary: '#f97316',     // Orange-500
            secondary: '#fb923c',   // Orange-400
            accent: '#ea580c',      // Orange-600
            neutral: '#6b7280',
            success: '#22c55e',
            warning: '#f59e0b',
            error: '#ef4444',
            background: '#fff7ed'   // Orange-50
          },
          typography: {
            fontFamily: 'Inter, system-ui, sans-serif',
            headingFont: 'Inter, sans-serif'
          },
          features: [
            'reservations',
            'pet_management',
            'medical_history',
            'vaccination_reminders',
            'emergency_contact'
          ]
        }
      });
      
      console.log('‚úÖ Veterin√°rn√≠ template vytvo≈ôen');
    }

    // 3. Aktualizuj tenant Svahy
    const updatedTenant = await prisma.tenant.update({
      where: { slug: 'svahy' },
      data: {
        contentTemplateId: veterinaryTemplate.id,
        subdomain: 'veterina-svahy',
        primaryColor: '#f97316', // Orange pro veterinu
        secondaryColor: '#fb923c'
      }
    });

    console.log('‚úÖ Tenant Svahy aktualizov√°n s veterin√°rn√≠m template');
    console.log('üìã Detaily:');
    console.log(`- Subdom√©na: ${updatedTenant.subdomain}`);
    console.log(`- Template: ${veterinaryTemplate.displayName}`);
    console.log(`- Prim√°rn√≠ barva: ${updatedTenant.primaryColor}`);

  } catch (error) {
    console.error('‚ùå Chyba p≈ôi aktualizaci:', error);
  } finally {
    await prisma.$disconnect();
  }
}

updateSvahyTenant().catch((e) => {
  console.error('‚ùå Kritick√° chyba:', e);
  process.exit(1);
});