import { PrismaClient } from '@prisma/client'

// Keepalive pro Railway datab√°zi s agresivnƒõj≈°√≠m probouzen√≠m
export function startDatabaseKeepalive(prisma: PrismaClient) {
  console.log('üîÑ Spou≈°t√≠m agresivn√≠ database keepalive...')
  
  let isConnected = false
  let retryCount = 0
  
  const pingDatabase = async () => {
    try {
      // Zkus√≠me se p≈ôipojit a restartovat Prisma
      await prisma.$connect()
      await prisma.$queryRaw`SELECT 1`
      
      if (!isConnected) {
        console.log(`‚úÖ Datab√°ze probuzen po ${retryCount} pokusech! Keepalive bƒõ≈æ√≠`)
        isConnected = true
        retryCount = 0
      } else {
        console.log('üíö DB ping - OK')
      }
    } catch (error: any) {
      retryCount++
      
      if (isConnected) {
        console.log('‚ùå DB ping - spadla, restartuji spojen√≠...')
        isConnected = false
      } else {
        console.log(`üîÑ Probouz√≠m datab√°zi... (pokus ${retryCount})`)
      }
      
      // Pokus o odpojen√≠ a p≈ôipojen√≠
      try {
        await prisma.$disconnect()
        await new Promise(resolve => setTimeout(resolve, 1000))
      } catch (e) {
        // Ignoruj chyby p≈ôi odpojov√°n√≠
      }
    }
  }
  
  // Okam≈æit√Ω prvn√≠ pokus
  pingDatabase()
  
  // Pak ka≈æd√Ωch 10 sekund (m√≠sto 5)
  setInterval(pingDatabase, 10000)
} 